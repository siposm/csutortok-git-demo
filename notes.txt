fejlesztés csapatban történik

SCRUM team
    developer team
        'A' kategorizálás:
            senior
            medior
            junior
        'B' kategorizálás:
            frontend
            backend
            fullstack (fe + be)
            tester
    scrum master
    product owner

https://git-scm.com/downloads/win

git => maga a verziókezelésre/követésre szolgáló program
git bash => linux terminál "emulátor"
git gui => valamilyen grafikus felhasználói felülettel rendelkező program

fájl állapotok a git alapján:
    untracked: a git (=verziókövető) nem figyeli még a fájlt
    track: a git figyeli a fájlt
    modified: valami módosítva lett
    staged: valami hozzáadásra került, kommitolásra vár

git commandok
    git init: repository inicializálása
    git status: státusz lekérdezése (fájl állapotok stb.)
    git add: adott fájl stagelése (commitolás előtt)
        git add * (minden fájl)
        git add . (minden fájl)
        git add xy.txt
    git commit -m "valami uzenet": a "pillanatkép" (=commit) elkészítése adott kis rövid üzenettel kiegészítve
    git log: commitok kilistázása minden adattal együtt
    git log --all --decorate --oneline --graph
    git commit --amend: legutolsó (nem pusholt) commit üzenet módosítása
    git checkout <commid_id>: adott id-jú commit-ra történő visszaállás

fő branch ami alapból létrejön (~idővonal): master (vagy main) branch

"commit small, commit often" elv alkalmazása

----------------------------------------------------

build fájlok -> olyan fájlok amelyek a program(ok) futása során állnak elő

Verziókezelők:
    Git
    Microsoft TFS (team foundation server)
    Mercurial
    Subversion (Apache)

decentralizált vs centralizált
    git megvalósítja mind a két elvet